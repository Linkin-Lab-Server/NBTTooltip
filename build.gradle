plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = "${mod_version}-fabric"
archivesBaseName = "nbttooltip"

minecraft {
}

repositories {
    mavenLocal()
	maven {
		url = "https://www.cursemaven.com"
	}
    maven {
    	name = "ModMenu"
    	url = "https://maven.terraformersmc.com/releases/"
    }
    maven {
    	name = "Cloth+REI"
    	url = "https://maven.shedaniel.me/"
    }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
//	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") {
//      exclude module: 'fabric-api'
//      exclude module: 'cloth-config-fabric'
//      exclude module: 'roughlyenoughitems-api'
//		exclude module: 'fabric-loader'
//    }

	modImplementation("curse.maven:roughly-enough-items-310111:${project.rei_version}")
	modImplementation("curse.maven:cloth-config-319057:${project.clothconfig_version}")
	include("curse.maven:cloth-config-319057:${project.clothconfig_version}")
//	modCompileOnly("me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}") {
//		exclude module: 'fabric-api'
//		exclude module: 'fabric-loader'
//	}
//	modRuntime("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}") {
//		exclude module: 'fabric-api'
//		exclude module: 'fabric-loader'
//	}

	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")  {
      exclude module: 'fabric-api'
		exclude module: 'fabric-loader'
		exclude module: 'cloth-config-fabric'
      exclude module: 'roughlyenoughitems-api'
    }
	
	
//	//Bundling
//	include "me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}
